apply Service "disk" {
  import "generic-service"
  import "grafana-disable"
  enable_notifications = 0
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_disk_status.ps1'"
  //vars.disk_win_warn = "20%"
  //vars.disk_win_crit = "10%"
  assign where host.vars.os == "Windows"
}

apply Service "interface Ethernet" {
  import "generic-service"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_network.ps1'"
  //vars.network_win_warn = 1048576
  //vars.network_win_crit = 2097152
  vars.panel_url = 8
  vars.service_url = "interface_Ethernet"
  import "grafana-custom"
  assign where host.vars.os == "Windows"
  ignore where host.vars.icingaclient == "2.6"
}

apply Service "network" {
  import "generic-service"
  command_endpoint = host.name
  check_command = "network-windows"
  if (host.vars.network.network_win_warn) {
    vars.network_win_warn = host.vars.network.network_win_warn
  } else {
    vars.network_win_warn = 1048576
  }
  if (host.vars.network.network_win_crit) {
    vars.network_win_crit = host.vars.network.network_win_crit
  } else {
    vars.network_win_crit = 2097152
  }
  vars.panel_url = 8
  import "grafana-service"
  assign where host.vars.os == "Windows" && host.vars.icingaclient == "2.6"
}

apply Service "cmd" {
  import "generic-service"
  import "grafana-service"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_procs.ps1'"
  vars.ps_proccessname = "cmd.exe"
  vars.ps_warn = "1"
  vars.ps_crit = "1"
  vars.ps_args = "-processname " + vars.ps_proccessname + " -warning " + vars.ps_warn + " -critical " + vars.ps_crit
  assign where host.name == "*-g01*"
}

apply Service "shares" {
  import "generic-service"
  import "grafana-disable"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_shares.ps1'"
  vars.ps_args = "-share '" + host.vars.netshares + "'"
  assign where host.vars.os == "Windows" && host.vars.netshares
}

apply Service "oracle login myapp" {
  import "generic-service"
  import "grafana-disable"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_oracle.ps1'"
  assign where host.vars.myappserver
}

apply Service for (folder => config in host.vars.folder) {
  import "generic-service"
  command_endpoint = host.name
  check_command = "powershell"
  vars += config
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_file_ages_in_dirs.ps1'"
  //vars.ps_args = "-path " + folder + " -warning 12 -critical 24"
  vars.ps_args = "-path " + folder
  display_name = "age " + vars.folder_name
  vars.panel_url = 14
  import "grafana-custom"
  assign where host.vars.os == "Windows"
}

apply Service "Sync Import" {
  import "generic-service"
  import "grafana-disable"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_file_exists.ps1'"
  assign where host.vars.importserver
}

apply Service for (files_modified => config in host.vars.files_modified) {
  import "generic-service"
  command_endpoint = host.name
  check_command = "powershell"
  vars += config
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_file_modified.ps1'"
  vars.ps_args = "-path " + files_modified
  display_name = "age " + vars.folder_name
  vars.panel_url = 14
  import "grafana-custom"
  assign where host.vars.os == "Windows"
}

apply Service for (ifw => config in host.vars.icingaforwindows) {
  import "generic-service"
  command_endpoint = host.name
  vars += config
  if (!vars.service_url) {
    vars.service_url = ifw
  }
  vars.panel_url = 10
  import "grafana-custom"
  display_name = "process " + ifw
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_icingaforwindows.ps1'"
  vars.ps_args = "-invoke " + vars.invoke + " -name " + ifw
}

apply Service "printer_spool" {
  import "generic-service"
  import "grafana-service"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_printer_spool.ps1'"
  assign where host.vars.printserver
}

apply Service "sql_backup" {
  import "generic-service-60min"
  import "grafana-disable"
  command_endpoint = host.name
  if (host.vars.mssql_backup.backup_downtime) {
    vars.backup_downtime = host.vars.mssql_backup.backup_downtime
  }
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_sql-backup.ps1'"
  assign where host.vars.mssql_backup
}

apply Service "sql_jobsdisabled" {
  import "h24-service"
  import "grafana-disable"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_sql-jobsdisabled.ps1'"
  assign where host.vars.mssql_logshipping
}

apply Service "sql_logshipping" {
  import "h24-service"
  import "grafana-disable"
  command_endpoint = host.name
  check_command = "powershell"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_sql-logshipping.ps1'"
  assign where host.vars.mssql_logshipping
}
